**************************
***  ECE 5362, AU 2018 ***
***  Machine Problem 3 ***
***  Andrew  Maloney   ***
***  Alexander Wilson  ***
**************************
***  Start fetch cycle 1 ***
 st=0	rt='[pc] -> mar'	imar rac=1 rn=3
 st=1	rt='[[mar]] -> mdr'	read
 st=2	rt='[mdr] -> ir'	omdr iir
 st=3	rt='[pc]+1 -> q'	rac=1 rn=3 ib p1 oadder
 st=4	rt='[q] -> pc'		oq wac=1 wn=3
 
*** Check Instruction Type: Halt; Single Operand; Double Operand ***
	cond='ir158'	value=0 nst=41
	cond='ir1512'	value=0 nst=22


*** Move src information to temporary registers ***
**** Check SAD ****
 st=5
	cond='ir108'	value=0 nst=10	
        cond='ir108'	value=1 nst=14
        cond='ir108'	value=2 nst=14
        cond='ir108'	value=3 nst=11

*** Fetch additional word ***
 st=6	rt='[pc] -> mar'	imar rac=1 rn=3
 st=7	rt='[[mar]] -> mdr'	read
 st=8	rt='[pc] + 1 -> q'	rac=1 rn=3 ib p1 oadder
 st=9	rt='[q] -> pc'		oq wac=1 wn=3
*** If index; absolute; immediate ***
	cond='ir108'	value=4	nst=17
	cond='ir108'	value=5 nst=20
	cond='ir108'	value=6 nst=21
	nst=41

*** Add src operand to t2 and src address to t3 ***
**** Register ****
 st=10	rt='[r] -> t2'		rac=2 it2
	nst=22

**** Autodecrement ****
 st=11	rt='[r] -> t1'		rac=2 it1
 st=12	rt='[t1] - 1 -> q'	oa comp oadder
 st=13	rt='[q] -> r'		oq wac=2

**** Register Indirect and Autoincrement ****
 st=14	rt='[r] -> mar&t3'	rac=2 imar it3
 st=15	rt='[[mar]] -> mdr'	read
 st=16	rt='[mdr] -> t2'	omdr it2 
	nst=22

*** Index ***
 st=17	rt='[mdr] -> t1'	omdr it1
 st=18	rt='[t1] + [r] -> q'	rac=2 ib oa oadder
 st=19 	rt='[q] -> mar&t3'	oq imar it3
	nst=15

*** Absolute ***
 st=20	rt='[mdr] -> mar&t3'	omdr imar it3
	nst=15

*** Immediate ***
 st=21 rt='[mdr] -> t2'		omdr it2



*** Move dst information to temporary registers ***
**** Check DAD, fetch 2nd word if necessary ****
 st=22
	cond='ir64'	value=0 nst=28	
        cond='ir64'	value=1 nst=32
        cond='ir64'	value=2 nst=32
        cond='ir64'	value=3 nst=29

*** Fetch additional word for dst ***
 st=23	rt='[pc] -> mar'	imar rac=1 rn=3
 st=24	rt='[[mar]] -> mdr'	read
 st=25	rt='[pc] + 1 -> q'	rac=1 rn=3 ib p1 oadder
 st=26	rt='[q] -> pc'		oq wac=1 wn=3

**** If addressing mode is index; absolute; other ****
 st=27
	cond='ir64'	value=4	nst=35
	cond='ir64'	value=5 nst=38
	nst=41

*** Add dst operand to t4 and dst address to t5 ***
**** Register ****
 st=28	rt='[r] -> t4'		rac=3 it4
	nst=39

**** Autodecrement ****
 st=29	rt='[r] -> t1'		rac=3 it1
 st=30	rt='[t1] - 1 -> q'	oa comp oadder
 st=31	rt='[q] -> r'		oq wac=3

**** Register Indirect and Autoincrement ****
 st=32	rt='[r] -> mar&t5'	rac=3 imar it5
 st=33	rt='[[mar]] -> mdr'	read
 st=34	rt='[mdr] -> t4'	omdr it4 
	nst=39

**** Index ****
 st=35	rt='[mdr] -> t1'	omdr it1
 st=36	rt='[t1] + [r] -> q'	rac=3 ib oa oadder
 st=37 	rt='[q] -> mar&t5'	oq imar it5
	nst=33

**** Absolute ****
 st=38	rt='[mdr] -> mar&t5'	omdr imar it5
	nst=33



*** Check instruction ***
  st=39
	cond='ir1512'	value=0 nst=40
**** Double Operand Instructions: ADD; SUB; MOVE ****
 	cond='ir1512'	value=1 nst=100
 	cond='ir1512'	value=2 nst=111
 	cond='ir1512'	value=3 nst=122
	cond='ir1512'	value=4	nst=135
	cond='ir1512'	value=5 nst=150
	cond='ir1512'	value=6 nst=160
  
**** Single Operand Instructions: INC; DEC; NEG****
 st=40
	cond='ir118'	value=2	nst=70
	cond='ir118'	value=3 nst=77
	cond='ir118'	value=4 nst=85

*** HALT execution cycle ***
 st=41 halt
 

 
 
 
*** INC execution cycle ***
 st=70 	rt='[t4]+1->q'		ot4 ib p1 oadder newv newc
	cond='ir64'	value=0 nst=76
 
**** Handle not register addressing ****
 st=71  rt='[q] -> mdr'		oq imdr newz newn
 st=72  rt='[t5] -> mar'	ot5 imar
 st=73	rt='[mdr] -> [mar]'	write
	cond='ir64'	value=2 nst=74
 	nst=0

**** Handle autoincrement ****
 st=74	rt='[t5] +1 -> q'	ot5 ib p1 oadder
 st=75	rt='[q] -> r'		oq wac=3
 	nst=0

**** Handle register ****
 st=76	rt='[q] -> r'		oq wac=3 newz newn
	nst=0



*** DEC execution cycle ***
 st=77	rt='[t4] -> t1'		ot4 it1
 st=78	rt='[t1] - 1 -> q'	oa comp oadder newv newc
	cond='ir64'	value=0 nst=84
 
**** Handle not register addressing ****
 st=79  rt='[q] -> mdr'		oq imdr newz newn
 st=80  rt='[t5] -> mar'	ot5 imar
 st=81	rt='[mdr] -> [mar]'	write
	cond='ir64'	value=2 nst=82
 	nst=0

**** Handle autoincrement ****
 st=82	rt='[t5] +1 -> q'	ot5 ib p1 oadder
 st=83	rt='[q] -> r'		oq wac=3
 	nst=0
	
**** Handle register ****
 st=84	rt='[q] -> r'		oq wac=3 newz newn
	nst=0



*** NEG execution cycle ***
 st=85 	rt='0-[t4] -> q'	ot4 ib comp p1 oadder newv newc
	cond='ir64'	value=0 nst=91

**** Handle not register addressing ****
 st=86  rt='[q] -> mdr'		oq imdr newz newn
 st=87  rt='[t5] -> mar'	ot5 imar
 st=88	rt='[mdr] -> [mar]'	write
	cond='ir64'	value=2 nst=89
 	nst=0

**** Handle autoincrement ****
 st=89	rt='[t5] +1 -> q'	ot5 ib p1 oadder
 st=90	rt='[q] -> r'		oq wac=3
 	nst=0
	
**** Handle register ****
 st=91	rt='[q] -> r'		oq wac=3 newz newn
  nst=0




*** ADD execution cycle ***
 st=100	rt='[t4] -> t1'		ot4 it1
 st=101	rt='[t1] + [t2] -> q'	ot2 ib oa oadder newv newc
	cond='ir64'	value=0 nst=110
 st=102	rt='[q] -> mdr'		oq imdr newz newn
 st=103	rt='[t5] -> mar'	ot5 imar
 st=104	rt='[mdr] -> [mar]'	write
	cond='ir108'	value=2 nst=106
 st=105
	cond='ir64'	value=2 nst=108
 	nst=0

**** Handle autoincrement ****
 st=106	rt='[t3] + 1 -> q'	ot3 ib p1 oadder
 st=107	rt='[q] -> r'		oq wac=2
	nst=105
 st=108	rt='[t5] + 1 -> q'	ot5 ib p1 oadder
 st=109	rt='[q] -> r'		oq wac=3
	nst=0
        
**** Handle register DAD ****
 st=110	rt='[q] -> r'		oq wac=3 newz newn
	cond='ir108'	value=2 nst=106
  nst=0
  
  
  
*** SUB execution cycle ***
 st=111	rt='[t4] -> t1'		ot4 it1
 st=112	rt='[t1] - [t2] -> q'	ot2 ib comp p1 oa oadder newv newc
	cond='ir64'	value=0 nst=121
 st=113	rt='[q] -> mdr'		oq imdr newz newn
 st=114	rt='[t5] -> mar'	ot5 imar
 st=115	rt='[mdr] -> [mar]'	write
	cond='ir108'	value=2 nst=117
 st=116
	cond='ir64'	value=2 nst=119
 	nst=132

**** Handle autoincrement ****
 st=117	rt='[t3] + 1 -> q'	ot3 ib p1 oadder
 st=118	rt='[q] -> r'		oq wac=2
	nst=116
 st=119	rt='[t5] + 1 -> q'	ot5 ib p1 oadder
 st=120 rt='[q] -> r'		oq wac=3
	nst=132
        
**** Handle register DAD ****
 st=121	rt='[q] -> r'		oq wac=3 newz newn
	cond='ir108'	value=2 nst=117
	nst=132


*** MOVE execution cycle ***
 st=122	
	cond='ir64'	value=0 nst=131
 st=123	rt='[t2] -> mdr'	ot2 imdr newz newn
 st=124 rt='[t5] -> mar'	ot5 imar
 st=125	rt='[mdr] -> [mar]'	write clrv clrc
	cond='ir108'	value=2 nst=127
 st=126
	cond='ir64'	value=2 nst=129
 	nst=0

**** Handle autoincrement ****
 st=127	rt='[t3] + 1 -> q'	ot3 ib p1 oadder
 st=128 rt='[q] -> r'		oq wac=2
	nst=126
 st=129	rt='[t5] + 1 -> q'	ot5 ib p1 oadder
 st=130 rt='[q] -> r'		oq wac=3
	nst=0
        
**** Handle register DAD ****
 st=131	rt='[t2] -> r'		ot2 wac=3 newz newn clrv clrc
	cond='ir108'	value=2 nst=127
	nst=0

**** Handle C for SUB ****
 st=132
	cond='c'	value=0 nst = 134
 st=133 rt='0 -> c'		clrc
	nst=0
 st=134 rt='1 -> c'		setc
	nst=0

**** EXG execution cycle ****
 st=135 rt='check DAD'
	cond='ir64'	value=0 nst=147
 st=136 rt='[t2] -> mdr'	ot2 imdr
 st=137 rt='[t5] -> mar'	ot5 imar
 st=138 rt='[mdr] -> [mar]'	write
 	cond='ir108'	value=0 nst=148
 st=140 rt='[t4] -> mdr'	ot4 imdr
 st=141 rt='[t3] -> mar'	ot3 imar
 st=142 rt='[mdr] -> [mar]'	write
	cond='ir108'	value=2 nst=143
	cond='ir64'	value=2 nst=145
	nst=0

**** Handle autoincrement ****
 st=143 rt='[t3] + 1 -> q'	ot3 ib p1 oadder
 st=144 rt='[q] -> r'		oq wac=2
	cond='ir64'	value=2 nst=145
	nst=0
 st=145 rt='[t5] + 1 -> q'	ot5 ib p1 oadder
 st=146 rt='[q] -> r'		oq wac=3
	nst=0

**** Handle register ****
 st=147 rt='[t2] -> r'		ot2 wac=3
	cond='ir108'	value=2 nst=143
	cond='ir108'	value=0 nst=148
	nst=140
 st=148 rt='[t4] -> r'		ot4 wac=2
	nst=0

**** OR execution cycle ****
 st=150 rt='[t2] OR [t4] -> q'	ot2 ot4 ib oadder
 	cond='ir64'	value=0	nst=158
 st=151 rt='[q] -> mdr'		oq imdr newz newn
 st=152 rt='[t5] -> mar'	ot5 imar
 st=153 rt='[mdr] -> [mar]'	write clrv clrc
	cond='ir108'	value=2	nst=154
	cond='ir64'	value=2	nst=156

 st=154	rt='[t3] + 1 -> q'	ot3 ib p1 oadder
 st=155 rt='[q] -> r'		oq wac=2
	cond='ir64'	value=2 nst=156
	nst=0
 st=156	rt='[t5] + 1 -> q'	ot5 ib p1 oadder
 st=157 rt='[q] -> r'		oq wac=3
	nst=0

 st=158	rt='[q] -> r'		oq wac=3
 	nst=0

**** AND execution cycle ****
 st=160 rt='![t2] -> q'		ot2 ib comp oadder
 st=161 rt='[q] -> t1'		oq it1
 st=162 rt='![t4] -> q'		ot4 ib comp oadder
 st=163 rt='[q] OR [t1] -> q'	ot1 oq ib oadder
 st=164 rt='![q] -> q'		oq ib comp oadder
	cond='ir64'	value=0 nst=172
 st=165 rt='[q] -> mdr'		oq imdr newz newn
 st=166 rt='[t5] -> mar'	ot5 imar
 st=167 rt='[mdr] -> [mar]'	write clrv clrc
	cond='ir108'	value=2	nst=168
	cond='ir64'	value=2	nst=170

 st=168	rt='[t3] + 1 -> q'	ot3 ib p1 oadder
 st=169 rt='[q] -> r'		oq wac=2
	cond='ir64'	value=2 nst=170
	nst=0
 st=170	rt='[t5] + 1 -> q'	ot5 ib p1 oadder
 st=171 rt='[q] -> r'		oq wac=3
	nst=0

 st=172	rt='[q] -> r'		oq wac=3
 	nst=0
